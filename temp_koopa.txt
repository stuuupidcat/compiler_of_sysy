decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @main(): i32 {
%entry:
  @arr_1 = alloc [i32, 10]
  %0 = getelemptr @arr_1, 0
  store 0, %0
  %1 = getelemptr @arr_1, 1
  store 0, %1
  %2 = getelemptr @arr_1, 2
  store 0, %2
  %3 = getelemptr @arr_1, 3
  store 0, %3
  %4 = getelemptr @arr_1, 4
  store 0, %4
  %5 = getelemptr @arr_1, 5
  store 0, %5
  %6 = getelemptr @arr_1, 6
  store 0, %6
  %7 = getelemptr @arr_1, 7
  store 0, %7
  %8 = getelemptr @arr_1, 8
  store 0, %8
  %9 = getelemptr @arr_1, 9
  store 0, %9
  %10 = load @arr_1
  call @getarray(%10)
  @n_1 = alloc i32
  store %-1, @n_1
  @i_1 = alloc i32
  store 0, @i_1
  jump %L0
%L0:
  %11 = load @i_1
  %12 = lt %11, 10
  br %12, %L1, %L3
%L1:
  %13 = load @i_1
  %14 = load @n_1
  %15 = lt %13, %14
  br %15, %L4, %L5
%L4:
  %16 = load @i_1
  %17 = getelemptr @arr_1, %16
  %18 = load @i_1
  %19 = getelemptr @arr_1, %18
  %20 = load %19
  %21 = load @i_1
  %22 = add %20, %21
  store %22, %17
  jump %L6
%L5:
  %23 = load @i_1
  %24 = getelemptr @arr_1, %23
  %25 = load @i_1
  %26 = sub %25, 1
  %27 = getelemptr @arr_1, %26
  %28 = load %27
  %29 = load @i_1
  %30 = add %28, %29
  store %30, %24
  jump %L6
%L6:
  %31 = load @i_1
  %32 = add %31, 1
  store %32, @i_1
  jump %L2
%L2:
  jump %L0
%L3:
  %33 = load @n_1
  %34 = load @arr_1
  call @putarray(%33, %34)
  ret 0
}

